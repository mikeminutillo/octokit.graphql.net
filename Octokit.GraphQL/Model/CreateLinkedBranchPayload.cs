namespace Octokit.GraphQL.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using Octokit.GraphQL.Core;
    using Octokit.GraphQL.Core.Builders;

    /// <summary>
    /// Autogenerated return type of CreateLinkedBranch
    /// </summary>
    public class CreateLinkedBranchPayload : QueryableValue<CreateLinkedBranchPayload>
    {
        internal CreateLinkedBranchPayload(Expression expression) : base(expression)
        {
        }

        /// <summary>
        /// A unique identifier for the client performing the mutation.
        /// </summary>
        public string ClientMutationId { get; }

        /// <summary>
        /// The issue that was linked to.
        /// </summary>
        public Issue Issue => this.CreateProperty(x => x.Issue, Octokit.GraphQL.Model.Issue.Create);

        /// <summary>
        /// The new branch issue reference.
        /// </summary>
        public LinkedBranch LinkedBranch => this.CreateProperty(x => x.LinkedBranch, Octokit.GraphQL.Model.LinkedBranch.Create);

        internal static CreateLinkedBranchPayload Create(Expression expression)
        {
            return new CreateLinkedBranchPayload(expression);
        }
    }
}